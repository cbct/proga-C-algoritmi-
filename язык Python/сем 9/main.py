# pip install pandas  в терминал
# pip install matplotlib в терминал

import pandas as pd
import matplotlib.pyplot as plt

x = pd.read_csv('Titanic.csv')

print(x['PassengerId'])             #выводит столбец PassengerId
print('-----------------------------------------------------------------------------------------')


x = pd.read_csv('Titanic.csv', index_col = 0)

x = x.dropna()

print(x.info())                         # 3.сводную информацию по базе данных

print('-----------------------------------------------------------------------------------------')
print(x.describe())                      # 4.описательная статистика
print('-----------------------------------------------------------------------------------------')

                                                    # 5.создание гистограммы по столбцу age
x['Age'].plot.hist(color = 'red')                   
plt.title("Возраст", size = 20)                      # текст заголовка с размером шрифта 16       
plt.xlabel("Лет", size = 14)                         # текс по оси х и у с шрифтом 14
plt.ylabel("Количество людей", size = 14)
plt.show()                                          # выводит гистограму на экран


print('-----------------------------------------------------------------------------------------')
print(x['Fare'].describe())                   # 6. выводит описательную статистику столбца Fare
print('-----------------------------------------------------------------------------------------')

y = list(x.columns)                              # 7.выводит список названий столбцов
print(y)          

print('-----------------------------------------------------------------------------------------')
y[1] = 'Class'                          # 8.переименовываем столбец Pclass в Class
x.columns = y
print('-----------------------------------------------------------------------------------------')
 
female = x[x["Sex"] == "female"]        # 9.записал все строки с женским полом в новый файл female
print(female)
female.to_csv('female')
print('-----------------------------------------------------------------------------------------')


Ymale = x[(x["Survived"] ==1) & (x["Age"] <32)]     # 10. забисывает в новую БД те кто выжил и менее 32 лет
print(Ymale)
Ymale.to_csv("Ymale")
print('-----------------------------------------------------------------------------------------')

clas = x[(x["Class"] == 1) | (x["Class"] == 2)]     # 11. нашел из БД строки в которых пассажиры 1 или 2 класса
print(clas)
print('-----------------------------------------------------------------------------------------')

SurClass = x[(x["Survived"] == 1) & ((x["Class"] ==1) | (x["Class"] == 2))]
print(SurClass.head(20))                    # 12.выбрал строки которые соответствуют выжившим пассажирам 1 или 2 класса
print('-----------------------------------------------------------------------------------------')

my_list = list(x["Sex"] == "female" if 1 else 0)
x['Female'] = my_list                       # 13. Добавляем в БД столбец Female где 1 соответствует пассажирам женского пола а 0 другого.
x['Female'] = x['Female'].replace(to_replace = [True , False], value=[1, 0])   # методом replace заменяем булевые значения тру фолс на 1 и 0
print('-----------------------------------------------------------------------------------------')


                                #ГРУППИРОВКА


m = x["Embarked"].unique()              # все уникальные значения из столбца Embarked
print(m)
print('-----------------------------------------------------------------------------------------')

groupe = x.groupby('Sex')['Age'].agg(['mean', 'median'])
print(groupe)
                                        # группировка строк в датафрейме в соответствии со значениями переменной Sex и сохранение в отдельный датафрейм таблицу со средними и медианными значениями переменной Age по группам (мужчины и женщины)
groupe.to_csv("groupe 3")
print('-----------------------------------------------------------------------------------------')

l1 = x.columns.str.lower().tolist()                # все названия столбцов в датафрейме к нижнему регистру
x.columns = l1

x.to_csv("Titanic-new.csv")

print(x)





















































































